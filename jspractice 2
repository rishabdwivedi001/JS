<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>SVG Drawing Tool</title>
  <style>
    .container {
      width: 650px;
      border: 2px solid #333;
      padding: 16px;
      margin: 40px auto;
      border-radius: 4px;
      background: #fff;
    }
    h2 {
      margin-top: 0;
    }
    .drawing-area {
      border: 2px solid #888;
      background: #fff;
      display: block;
      margin: 12px auto 0 auto;
      box-sizing: border-box;
    }
  </style>
</head>
<body>
  <div class="container">
    <h2>SVG Drawing Tool</h2>
    <svg id="svgCanvas" class="drawing-area" width="600" height="400"></svg>
  </div>
  <script>
    const svg = document.getElementById('svgCanvas');
    let drawing = false;
    let currentPath = null;

    svg.addEventListener('mousedown', (e) => {
      drawing = true;
      const pt = getMousePosition(svg, e);
      currentPath = document.createElementNS('http://www.w3.org/2000/svg', 'polyline');
      currentPath.setAttribute('fill', 'none');
      currentPath.setAttribute('stroke', 'dodgerblue');
      currentPath.setAttribute('stroke-width', '2.5');
      currentPath.setAttribute('points', `${pt.x},${pt.y}`);
      svg.appendChild(currentPath);
    });

    svg.addEventListener('mousemove', (e) => {
      if (!drawing) return;
      const pt = getMousePosition(svg, e);
      let points = currentPath.getAttribute('points');
      points += ` ${pt.x},${pt.y}`;
      currentPath.setAttribute('points', points);
    });

    svg.addEventListener('mouseup', () => {
      drawing = false;
      currentPath = null;
    });
    svg.addEventListener('mouseleave', () => {
      drawing = false;
      currentPath = null;
    });

    function getMousePosition(svg, evt) {
      const rect = svg.getBoundingClientRect();
      return {
        x: evt.clientX - rect.left,
        y: evt.clientY - rect.top
      };
    }
  </script>
</body>
</html>
